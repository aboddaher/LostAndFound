name: Android DevOps Full Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  JAVA_VERSION: 17
  DISTRIBUTION: zulu
  ANDROID_BUILD_DIRECTORY: '.'
  AZURE_FUNCTIONAPP_BETA: 'com-ucas-lostandfound-beta'
  AZURE_FUNCTIONAPP_PROD: 'com-ucas-lostandfound'
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

permissions:
  contents: read
  security-events: write

jobs:
  # ===== Build =====
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Build Android project
        working-directory: ${{ env.ANDROID_BUILD_DIRECTORY }}
        run: ./gradlew assembleDebug

  # ===== Test =====
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Run Unit Tests
        working-directory: ${{ env.ANDROID_BUILD_DIRECTORY }}
        run: ./gradlew test

  # ===== Code Scan (MSDO) =====
  code-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Microsoft Security DevOps
        uses: microsoft/security-devops-action@v1.6.0
        id: msdo

      - name: Upload SARIF to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.msdo.outputs.sarifFile }}

  # ===== Package =====
  package:
    runs-on: ubuntu-latest
    needs: code-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Package APK
        working-directory: ${{ env.ANDROID_BUILD_DIRECTORY }}
        run: ./gradlew assembleRelease

  # ===== Deploy Beta =====
  deploy-beta:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Azure Function (Beta)
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_BETA }}
          package: '${{ env.ANDROID_BUILD_DIRECTORY }}/app/build/outputs/apk/debug/app-debug.apk'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_BETA }}

      - name: Notify Slack Beta Deployment
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Beta Deployment Successful ✅"}' ${{ env.SLACK_WEBHOOK }}

  # ===== Deploy Production =====
  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-beta
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Azure Function (Production)
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_PROD }}
          package: '${{ env.ANDROID_BUILD_DIRECTORY }}/app/build/outputs/apk/release/app-release.apk'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_PROD }}

      - name: Notify Slack Production Deployment
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Production Deployment Successful ✅"}' ${{ env.SLACK_WEBHOOK }}
